local UltraLordLib = {}
local TweenService = game:GetService("TweenService")
local UIS = game:GetService("UserInputService")

-- Configuration folder
local ConfigFolder = {
    Font = Enum.Font.FredokaOne,
    SecondaryFont = Enum.Font.FredokaOne,
    PrimaryColor = Color3.fromRGB(36, 36, 36),
    SecondaryColor = Color3.fromRGB(46, 46, 46),
    AccentColor = Color3.fromRGB(240, 240, 240),
    ToggleOnColor = Color3.fromRGB(56, 207, 137),
    ToggleOffColor = Color3.fromRGB(229, 57, 53)
}

function UltraLordLib:MakeWindow(config)
    config = config or {}
    local WindowName = config.WindowName or "Ultra Lord"
    
    -- Apply custom theme if provided
    if config.Theme then
        for key, value in pairs(config.Theme) do
            ConfigFolder[key] = value
        end
    end
    
    -- Apply custom fonts if provided
    if config.Font then
        ConfigFolder.Font = config.Font
    end
    if config.SecondaryFont then
        ConfigFolder.SecondaryFont = config.SecondaryFont
    end

    -- Main GUI Setup
    local ScreenGui = Instance.new("ScreenGui")
    local Main = Instance.new("Frame")
    local UICorner = Instance.new("UICorner")
    local Title = Instance.new("TextLabel")
    local TabHolder = Instance.new("Frame")
    local TabList = Instance.new("UIListLayout")
    local ContainerHolder = Instance.new("Frame")

    -- GUI Properties
    ScreenGui.Name = "UltraLord"
    ScreenGui.Parent = game.CoreGui
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

    Main.Name = "Main"
    Main.Parent = ScreenGui
    Main.BackgroundColor3 = ConfigFolder.PrimaryColor
    Main.Position = UDim2.new(0.5, -250, 0.5, -150)
    Main.Size = UDim2.new(0, 500, 0, 300)
    Main.Active = true
    Main.Draggable = true

    UICorner.Parent = Main
    UICorner.CornerRadius = UDim.new(0, 6)

    Title.Name = "Title"
    Title.Parent = Main
    Title.BackgroundTransparency = 1
    Title.Position = UDim2.new(0, 10, 0, 5)
    Title.Size = UDim2.new(0, 200, 0, 30)
    Title.Font = ConfigFolder.Font
    Title.Text = WindowName
    Title.TextColor3 = ConfigFolder.AccentColor
    Title.TextSize = 16
    Title.TextXAlignment = Enum.TextXAlignment.Left

    -- Toggle Button
    local ToggleButton = Instance.new("TextButton")
    ToggleButton.Name = "ToggleUI"
    ToggleButton.Parent = ScreenGui
    ToggleButton.Position = UDim2.new(0, 10, 0.5, 0)
    ToggleButton.Size = UDim2.new(0, 100, 0, 30)
    ToggleButton.BackgroundColor3 = ConfigFolder.PrimaryColor
    ToggleButton.Text = "Toggle UI"
    ToggleButton.TextColor3 = ConfigFolder.AccentColor
    ToggleButton.Font = ConfigFolder.Font
    ToggleButton.TextSize = 14

    local ToggleCorner = Instance.new("UICorner")
    ToggleCorner.Parent = ToggleButton
    ToggleCorner.CornerRadius = UDim.new(0, 6)

    -- Toggle Functionality
    local GuiVisible = true
    ToggleButton.MouseButton1Click:Connect(function()
        GuiVisible = not GuiVisible
        Main.Visible = GuiVisible
    end)

    -- Tab System
    TabHolder.Name = "TabHolder"
    TabHolder.Parent = Main
    TabHolder.BackgroundTransparency = 1
    TabHolder.Position = UDim2.new(0, 10, 0, 40)
    TabHolder.Size = UDim2.new(0, 120, 0, 250)

    TabList.Parent = TabHolder
    TabList.SortOrder = Enum.SortOrder.LayoutOrder
    TabList.Padding = UDim.new(0, 5)

    ContainerHolder.Name = "ContainerHolder"
    ContainerHolder.Parent = Main
    ContainerHolder.BackgroundTransparency = 1
    ContainerHolder.Position = UDim2.new(0, 135, 0, 40)
    ContainerHolder.Size = UDim2.new(0, 355, 0, 250)

    local Window = {}

    function Window:CreateTab(name)
        local Tab = Instance.new("TextButton")
        local Container = Instance.new("ScrollingFrame")
        local ItemList = Instance.new("UIListLayout")

        Tab.Name = name
        Tab.Parent = TabHolder
        Tab.BackgroundColor3 = ConfigFolder.SecondaryColor
        Tab.Size = UDim2.new(1, 0, 0, 30)
        Tab.Text = name
        Tab.TextColor3 = ConfigFolder.AccentColor
        Tab.Font = ConfigFolder.SecondaryFont
        Tab.TextSize = 14

        local TabCorner = Instance.new("UICorner")
        TabCorner.Parent = Tab
        TabCorner.CornerRadius = UDim.new(0, 4)

        Container.Name = name.."Container"
        Container.Parent = ContainerHolder
        Container.BackgroundTransparency = 1
        Container.Size = UDim2.new(1, 0, 1, 0)
        Container.ScrollBarThickness = 4
        Container.Visible = false

        ItemList.Parent = Container
        ItemList.SortOrder = Enum.SortOrder.LayoutOrder
        ItemList.Padding = UDim.new(0, 5)

        local TabFunctions = {}

        function TabFunctions:CreateButton(text, callback)
            local Button = Instance.new("TextButton")
            Button.Name = text
            Button.Parent = Container
            Button.BackgroundColor3 = ConfigFolder.SecondaryColor
            Button.Size = UDim2.new(1, -10, 0, 30)
            Button.Text = text
            Button.TextColor3 = ConfigFolder.AccentColor
            Button.Font = ConfigFolder.SecondaryFont
            Button.TextSize = 14

            local ButtonCorner = Instance.new("UICorner")
            ButtonCorner.Parent = Button
            ButtonCorner.CornerRadius = UDim.new(0, 4)

            Button.MouseButton1Click:Connect(callback)
            return Button
        end

        function TabFunctions:CreateToggle(text, default, callback)
            local Toggle = Instance.new("Frame")
            local ToggleButton = Instance.new("TextButton")
            local Status = Instance.new("Frame")
            local enabled = default or false

            Toggle.Name = text
            Toggle.Parent = Container
            Toggle.BackgroundColor3 = ConfigFolder.SecondaryColor
            Toggle.Size = UDim2.new(1, -10, 0, 30)

            ToggleButton.Parent = Toggle
            ToggleButton.BackgroundTransparency = 1
            ToggleButton.Size = UDim2.new(1, 0, 1, 0)
            ToggleButton.Text = text
            ToggleButton.TextColor3 = ConfigFolder.AccentColor
            ToggleButton.Font = ConfigFolder.SecondaryFont
            ToggleButton.TextSize = 14

            Status.Parent = Toggle
            Status.BackgroundColor3 = enabled and ConfigFolder.ToggleOnColor or ConfigFolder.ToggleOffColor
            Status.Position = UDim2.new(1, -25, 0.5, -5)
            Status.Size = UDim2.new(0, 10, 0, 10)

            local StatusCorner = Instance.new("UICorner")
            StatusCorner.Parent = Status
            StatusCorner.CornerRadius = UDim.new(1, 0)

            ToggleButton.MouseButton1Click:Connect(function()
                enabled = not enabled
                Status.BackgroundColor3 = enabled and ConfigFolder.ToggleOnColor or ConfigFolder.ToggleOffColor
                callback(enabled)
            end)

            return Toggle
        end

        function TabFunctions:CreateSlider(text, min, max, default, callback)
            local Slider = Instance.new("Frame")
            local Title = Instance.new("TextLabel")
            local SliderBar = Instance.new("Frame")
            local SliderButton = Instance.new("TextButton")
            local Value = Instance.new("TextLabel")

            Slider.Name = text
            Slider.Parent = Container
            Slider.BackgroundColor3 = ConfigFolder.SecondaryColor
            Slider.Size = UDim2.new(1, -10, 0, 45)

            Title.Parent = Slider
            Title.BackgroundTransparency = 1
            Title.Position = UDim2.new(0, 10, 0, 0)
            Title.Size = UDim2.new(1, -20, 0, 20)
            Title.Text = text
            Title.TextColor3 = ConfigFolder.AccentColor
            Title.TextXAlignment = Enum.TextXAlignment.Left
            Title.Font = ConfigFolder.SecondaryFont
            Title.TextSize = 14

            SliderBar.Parent = Slider
            SliderBar.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
            SliderBar.Position = UDim2.new(0, 10, 0, 25)
            SliderBar.Size = UDim2.new(1, -20, 0, 5)

            SliderButton.Parent = SliderBar
            SliderButton.BackgroundColor3 = ConfigFolder.AccentColor
            SliderButton.Size = UDim2.new(0, 10, 0, 15)
            SliderButton.Position = UDim2.new(0, -5, 0.5, -7.5)
            SliderButton.Text = ""

            Value.Parent = Slider
            Value.BackgroundTransparency = 1
            Value.Position = UDim2.new(1, -40, 0, 0)
            Value.Size = UDim2.new(0, 30, 0, 20)
            Value.Text = tostring(default)
            Value.TextColor3 = ConfigFolder.AccentColor
            Value.Font = ConfigFolder.SecondaryFont
            Value.TextSize = 14

            local function update(input)
                local pos = UDim2.new(math.clamp((input.Position.X - SliderBar.AbsolutePosition.X) / SliderBar.AbsoluteSize.X, 0, 1), -5, 0.5, -7.5)
                SliderButton.Position = pos
                local value = math.floor(((pos.X.Scale * (max - min)) + min) * 100) / 100
                Value.Text = tostring(value)
                callback(value)
            end

            SliderButton.MouseButton1Down:Connect(function()
                local input = {Position = UIS:GetMouseLocation()}
                update(input)
                local connection
                connection = UIS.InputChanged:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseMovement then
                        update(input)
                    end
                end)
                UIS.InputEnded:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        connection:Disconnect()
                    end
                end)
            end)

            return Slider
        end

        -- Tab animations and selection system
        local function animateTab(tab, selected)
            local targetColor = selected and ConfigFolder.AccentColor or ConfigFolder.SecondaryColor
            local textColor = selected and ConfigFolder.PrimaryColor or ConfigFolder.AccentColor

            local colorTween = TweenService:Create(tab, TweenInfo.new(0.3), {
                BackgroundColor3 = targetColor,
                TextColor3 = textColor
            })
            colorTween:Play()
        end

        Tab.MouseButton1Click:Connect(function()
            for _, tab in pairs(TabHolder:GetChildren()) do
                if tab:IsA("TextButton") then
                    animateTab(tab, tab == Tab)
                end
            end

            for _, container in pairs(ContainerHolder:GetChildren()) do
                if container:IsA("ScrollingFrame") then
                    if container == Container then
                        container.Visible = true
                        container.Position = UDim2.new(1, 0, 0, 0)
                        local slideTween = TweenService:Create(container, TweenInfo.new(0.4, Enum.EasingStyle.Quart), {
                            Position = UDim2.new(0, 0, 0, 0)
                        })
                        slideTween:Play()
                    else
                        local hideSlide = TweenService:Create(container, TweenInfo.new(0.4, Enum.EasingStyle.Quart), {
                            Position = UDim2.new(-1, 0, 0, 0)
                        })
                        hideSlide:Play()
                        hideSlide.Completed:Connect(function()
                            container.Visible = false
                        end)
                    end
                end
            end
        end)

        -- Set first tab as active by default
        if #TabHolder:GetChildren() == 1 then
            animateTab(Tab, true)
            Container.Visible = true
        end

        return TabFunctions
    end

    return Window
end

return UltraLordLib
